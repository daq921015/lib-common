--bc94bdda-315d-4df9-a15c-0b269d5dce65
Content-Disposition: form-data; name="access_token"

5_rr7CEFurTyTcY7vh6d0zK-3OKZee7QySTpxP84uSrm0SrOH_ZCXq1FzwYOxwn35t36bva8-bXEAUi0_9-d4_hzfyZPODvA4F7-7rymmGMB4cfZWJr3zAPbKF-di9xfZEmwiLd-DG2i-H1dIWKRKgAHAVCV
--bc94bdda-315d-4df9-a15c-0b269d5dce65
Content-Disposition: form-data; name="buffer";filename="2014_08_01_01.jpg"
Content-Type:application/octet-stream

--ea7c97d4-b5fb-4191-acf1-f786eb9d6038--


public class Test {
    public static void main(String[] args) {
        int total = 100;
        int size = 14;
        boolean[] aa = new boolean[total];
        int index = 0;
        int i = 0;
        while (true) {
            if (!aa[index]) {
                i++;
            }
            if (i % size == 0) {
                aa[index] = true;
            }
            index++;
            if (index == total) {
                index = 0;
            }
            if (i == size * (total - 1)) {
                break;
            }
        }
        for (int j = 0; j < total; j++) {
            if (!aa[j]) {
                System.out.println(j + 1);
            }
        }
    }
}

private static String[] LUNAR_DATE_ARRAY = {
            "04BD8", "04AE0", "0A570", "054D5", "0D260", "0D950", "16554", "056A0", "09AD0", "055D2",
            "04AE0", "0A5B6", "0A4D0", "0D250", "1D255", "0B540", "0D6A0", "0ADA2", "095B0", "14977",
            "04970", "0A4B0", "0B4B5", "06A50", "06D40", "1AB54", "02B60", "09570", "052F2", "04970",
            "06566", "0D4A0", "0EA50", "06E95", "05AD0", "02B60", "186E3", "092E0", "1C8D7", "0C950",
            "0D4A0", "1D8A6", "0B550", "056A0", "1A5B4", "025D0", "092D0", "0D2B2", "0A950", "0B557",
            "06CA0", "0B550", "15355", "04DA0", "0A5B0", "14573", "052B0", "0A9A8", "0E950", "06AA0",
            "0AEA6", "0AB50", "04B60", "0AAE4", "0A570", "05260", "0F263", "0D950", "05B57", "056A0",
            "096D0", "04DD5", "04AD0", "0A4D0", "0D4D4", "0D250", "0D558", "0B540", "0B6A0", "195A6",
            "095B0", "049B0", "0A974", "0A4B0", "0B27A", "06A50", "06D40", "0AF46", "0AB60", "09570",
            "04AF5", "04970", "064B0", "074A3", "0EA50", "06B58", "055C0", "0AB60", "096D5", "092E0",
            "0C960", "0D954", "0D4A0", "0DA50", "07552", "056A0", "0ABB7", "025D0", "092D0", "0CAB5",
            "0A950", "0B4A0", "0BAA4", "0AD50", "055D9", "04BA0", "0A5B0", "15176", "052B0", "0A930",
            "07954", "06AA0", "0AD50", "05B52", "04B60", "0A6E6", "0A4E0", "0D260", "0EA65", "0D530",
            "05AA0", "076A3", "096D0", "04BD7", "04AD0", "0A4D0", "1D0B6", "0D250", "0D520", "0DD45",
            "0B5A0", "056D0", "055B2", "049B0", "0A577", "0A4B0", "0AA50", "1B255", "06D20", "0ADA0",
            "14B63"};

    public static void main(String[] args) throws ParseException {
        Calendar calendar = Calendar.getInstance();
        int thisYear = calendar.get(Calendar.DAY_OF_YEAR);
        int year = 1900;
        int total = 0;
        int index = 0;
        long bbb = 0;
        long aaa = (new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse("2018-05-01 12:12:12").getTime() - new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse("1900-01-31 00:00:00").getTime()) / 86400000 + 1;
        for (String aa : LUNAR_DATE_ARRAY) {
            int thisYearAmount = (obtaina(aa.charAt(1)) + obtaina(aa.charAt(2)) + obtaina(aa.charAt(3))) * 30 + (12 - (obtaina(aa.charAt(1)) + obtaina(aa.charAt(2)) + obtaina(aa.charAt(3)))) * 29;
            if (aa.charAt(4) != '0') {
                thisYearAmount = thisYearAmount + (aa.charAt(0) == '0' ? 29 : 30);
            }

            total = total + thisYearAmount;
            if (total >= aaa) {
                bbb = thisYearAmount - total + aaa;
                break;
            }
            year = year + 1;
            index = index + 1;
        }
        String str = LUNAR_DATE_ARRAY[index];
        String c = str.charAt(4) + "";
        char a = str.charAt(0);
        str = obtain(str.charAt(1)) + obtain(str.charAt(2)) + obtain(str.charAt(3));
        if (!"0".equals(c)) {
            int i = 0;
            if (c == "a") {
                i = 10;
            } else if (c == "b") {
                i = 11;
            } else if (c == "c") {
                i = 12;
            } else {
                i = Integer.valueOf(c);
            }
            str = str.substring(0, i) + a + str.substring(i, 12);
        }
        int length = str.length();
        int su = 0;
        long mm = 0;
        int ah = 0;
        for (int j = 0; j < length; j++) {
            int ss = 0;
            if (str.charAt(j) == '1') {
                ss = 30;
            } else {
                ss = 29;
            }
            if (su + ss >= bbb) {
                mm = bbb - su;
                ah = j + 1;
                break;
            } else {
                su = su + ss;
            }
        }
        System.out.println(year + "年" + (ah == Integer.valueOf(c) + 1 && !"0".equals(c) ? "闰" + c : ah) + "月" + mm + "日");
    }

    public static int obtaina(char aaa) {
        int bbb = 0;
        if ('0' == aaa) {
            bbb = 0;
        } else if ('1' == aaa) {
            bbb = 1;
        } else if ('2' == aaa) {
            bbb = 1;
        } else if ('3' == aaa) {
            bbb = 2;
        } else if ('4' == aaa) {
            bbb = 1;
        } else if ('5' == aaa) {
            bbb = 2;
        } else if ('6' == aaa) {
            bbb = 2;
        } else if ('7' == aaa) {
            bbb = 3;
        } else if ('8' == aaa) {
            bbb = 1;
        } else if ('9' == aaa) {
            bbb = 2;
        } else if ('A' == aaa) {
            bbb = 2;
        } else if ('B' == aaa) {
            bbb = 3;
        } else if ('C' == aaa) {
            bbb = 2;
        } else if ('D' == aaa) {
            bbb = 3;
        } else if ('E' == aaa) {
            bbb = 3;
        } else if ('F' == aaa) {
            bbb = 4;
        }
        return bbb;
    }

    public static String obtain(char aaa) {
        String bbb = null;
        if ('0' == aaa) {
            bbb = "0000";
        } else if ('1' == aaa) {
            bbb = "0001";
        } else if ('2' == aaa) {
            bbb = "0010";
        } else if ('3' == aaa) {
            bbb = "0011";
        } else if ('4' == aaa) {
            bbb = "0100";
        } else if ('5' == aaa) {
            bbb = "0101";
        } else if ('6' == aaa) {
            bbb = "0110";
        } else if ('7' == aaa) {
            bbb = "0111";
        } else if ('8' == aaa) {
            bbb = "1000";
        } else if ('9' == aaa) {
            bbb = "1001";
        } else if ('A' == aaa) {
            bbb = "1010";
        } else if ('B' == aaa) {
            bbb = "1011";
        } else if ('C' == aaa) {
            bbb = "1100";
        } else if ('D' == aaa) {
            bbb = "1101";
        } else if ('E' == aaa) {
            bbb = "1110";
        } else if ('F' == aaa) {
            bbb = "1111";
        }
        return bbb;
    }

{
    "orderId": 18274321567639192,
    "orderIdView": 18274321567639192,
    "caution": "",
    "avgSendTime": 1810.0,
    "cityId": 210100,
    "ctime": 1520553944,
    "utime": 1520553976,
    "daySeq": "1",
    "deliveryTime": 0,
    "ePoiId": "2268Z2103",
    "hasInvoiced": 0,
    "invoiceTitle": "",
    "taxpayerId": "",
    "isFavorites": false,
    "isPoiFirstOrder": false,
    "isThirdShipping": 0,
    "latitude": 41.865902,
    "longitude": 123.392518,
    "logisticsCode": "1001",
    "originalPrice": 19.5,
    "payType": 2,
    "poiAddress": "沈阳市于洪区松山西路105号2门",
    "poiName": "姜妈妈小吃",
    "poiPhone": "66777566",
    "recipientAddress": "福轩记商务宾馆 (依云北郡四期南门町田寿司店)@#辽宁省沈阳市于洪区北固山路北固山路依云北郡四期",
    "recipientName": "李(女士)",
    "recipientPhone": "18640177866",
    "shipperPhone": "",
    "shippingFee": 3.0,
    "status": 4,
    "total": 19.5,
    "dinnersNumber": 0,
    "poiId": 1827432,
    "detail": "[{\"app_food_code\":\"芥菜丝\",\"box_num\":1,\"box_price\":0,\"cart_id\":0,\"food_discount\":1,\"food_name\":\"芥菜丝\",\"food_property\":\"\",\"price\":2,\"quantity\":1,\"sku_id\":\"\",\"spec\":\"\",\"unit\":\"份\"},{\"app_food_code\":\"白菜粉包\",\"box_num\":3,\"box_price\":0,\"cart_id\":0,\"food_discount\":1,\"food_name\":\"白菜粉包\",\"food_property\":\"\",\"price\":2.5,\"quantity\":3,\"sku_id\":\"\",\"spec\":\"\",\"unit\":\"份\"},{\"app_food_code\":\"豆腐脑\",\"box_num\":1,\"box_price\":1,\"cart_id\":0,\"food_discount\":1,\"food_name\":\"豆腐脑\",\"food_property\":\"\",\"price\":3,\"quantity\":1,\"sku_id\":\"\",\"spec\":\"\",\"unit\":\"份1\"},{\"app_food_code\":\"筋饼\",\"box_num\":0,\"box_price\":0,\"cart_id\":0,\"food_discount\":1,\"food_name\":\"筋饼\",\"food_property\":\"\",\"price\":3,\"quantity\":1,\"sku_id\":\"\",\"spec\":\"\",\"unit\":\"份\"}]",
    "extras": "[{}]",
    "poiReceiveDetail": "{\"actOrderChargeByMt\":[{\"comment\":\"活动款\",\"feeTypeDesc\":\"活动款\",\"feeTypeId\":10019,\"moneyCent\":0}],\"actOrderChargeByPoi\":[],\"foodShareFeeChargeByPoi\":300,\"logisticsFee\":300,\"onlinePayment\":1950,\"wmPoiReceiveCent\":1350}",
}

String barCode = "6903244673594";
int checkCode = Integer.parseInt(barCode.substring(12));

String str = StringUtils.reverse(barCode.substring(0, 12));
int length = str.length();
int number = 0;
for (int index = 0; index < length; index++) {
    if ((index + 1) % 2 == 0) {
        number = number + Integer.parseInt(str.substring(index, index + 1)) * 3;
    } else {
        number = number + Integer.parseInt(str.substring(index, index + 1));
    }
}

System.out.println(checkCode == 10 - number % 10);

private static final String NAME;
private String code;

getCode
setCode
getAge
setAge
<init>
<init>
<clinit>

// 阿里云日志服务接口
SimpleDateFormat rfc822DateFormat = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss z", Locale.US);
rfc822DateFormat.setTimeZone(new SimpleTimeZone(0, "GMT"));

String dateString = rfc822DateFormat.format(new Date());
Map<String, String> headers = new HashMap<String, String>();
headers.put("x-log-apiversion", "0.6.0");
headers.put("x-log-signaturemethod", "hmac-sha1");
headers.put("Date", dateString);

Map<String, String> requestParameters = new LinkedHashMap<String, String>();
requestParameters.put("type", "log");
requestParameters.put("from", "0");
requestParameters.put("to", String.valueOf(System.currentTimeMillis() / 1000));
requestParameters.put("line", "20");
requestParameters.put("offset", "0");

Map<String, String> sortedRequestParameters = new TreeMap<String, String>(requestParameters);
List<String> canonicalizedResource = new ArrayList<String>();
for (Map.Entry<String, String> entry : sortedRequestParameters.entrySet()) {
    canonicalizedResource.add(entry.getKey() + "=" + entry.getValue());
}

Map<String, String> sortedMap = new TreeMap<String, String>(headers);
List<String> canonicalizedLOGHeaders = new ArrayList<String>();
for (Map.Entry<String, String> entry : sortedMap.entrySet()) {
    String key = entry.getKey();
    if (key.startsWith("x-log-")) {
        canonicalizedLOGHeaders.add(entry.getKey() + ":" + entry.getValue());
    }
}

String signatureString = "GET" + "\n" + "\n" + "\n" + dateString + "\n" + StringUtils.join(canonicalizedLOGHeaders, "\n") + "\n/logstores/testlog?" + StringUtils.join(canonicalizedResource, "&");

String accessKeyId = "LTAIzWtJmkzU0Uex";
String accessKeySecret = "6XIiGAie3fEPoUIhQpZMsXuPa80bwT";
String signature = Base64.encodeBase64String(HmacUtils.hmacSha1(accessKeySecret, signatureString));

headers.put("Authorization", "LOG " + accessKeyId + ":" + signature);

WebResponse webResponse = WebUtils.doGetWithRequestParameters("http://logback.cn-qingdao.log.aliyuncs.com/logstores/testlog", headers, requestParameters);
String result = webResponse.getResult();
Map<String, List<String>> responseHeaders = webResponse.getHeaders();

System.out.println(GsonUtils.toJson(responseHeaders));
System.out.println(result);